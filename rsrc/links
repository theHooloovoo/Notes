# Type gx to open link through vim.

# === On the Web =========================================

Orbital Dynamics:
	# Wiki page on Kepler Orbits
	https://en.wikipedia.org/wiki/Kepler_orbit
	# Useful post on calculating orbital elements from current state.
	https://space.stackexchange.com/questions/1904/how-to-programmatically-calculate-orbital-elements-using-position-velocity-vecto

Parsers / Finite State Machines:
	# Tutorial Explaining LALR(1) Parsing
	https://web.cs.dal.ca/~sjackson/lalr1.html
	# Tutorial explaining the construction of a parse table.
	https://www.cs.york.ac.uk/fp/lsa/lectures/parsetable.pdf
	# Pretty State Machines (Blog Post, Rust)
	https://hoverbear.org/2016/10/12/rust-state-machine-pattern/
	# Pest API (Parser for Rust)
	https://pest.rs/book/intro.html
	# And it's home website with an interactively generated parser!
	https://pest.rs/

Raspberry Pi Robotics Shit:
	# A maybe helpful stackoverflow page??
	https://raspberrypi.stackexchange.com/questions/682/how-can-i-control-lego-motors

Vim References:
	# Cheat Sheet
	https://duckduckgo.com/?q=Vim+cheat+sheet&t=canonical&ia=cheatsheet&iax=1
	https://duckduckgo.com/?q=Vim+cheat+sheet&t=canonical&ia=cheatsheet

Python References:
	# Pylint Tutorial
	https://pylint.readthedocs.io/en/latest/tutorial.html

Rust References:
	# Official Book
	https://doc.rust-lang.org/book/index.html
	# Official Reference
	https://doc.rust-lang.org/stable/reference/

Haskell References:
	# Interactive Haskell Tutorial
	https://www.tryhaskell.org/
	# Learn You a Haskell for Great Good!
	http://www.learnyouahaskell.com/introduction
	# Tutorials Point
	https://www.tutorialspoint.com/haskell/index.htm

C/C++ References:

Linux References:

Other Random Shit:
	# Conways game of life in APL (Arcane Programming Language)
	http://dfns.dyalog.com/n_life.htm

# === On Disk =============================================

Books:
  # O'Rielly Books	(Humble Bundles are so good for these!)
    ~/Documents/Reilly/android_cookbook.pdf
    ~/Documents/Reilly/arduino_cookbook.pdf
    ~/Documents/Reilly/bash_cookbook_2nd.pdf
    ~/Documents/Reilly/bash_pocket_reference_2nd.pdf
    ~/Documents/Reilly/classing_shell_scripting.pdf
    ~/Documents/Reilly/css_cookbook.pdf
    ~/Documents/Reilly/dns_and_bind_5th.pdf
    ~/Documents/Reilly/docker_cookbook.pdf
    ~/Documents/Reilly/essential_system_administration_3rd.pdf
    ~/Documents/Reilly/javascript_cookbook.pdf
    ~/Documents/Reilly/learning_gnu_emacs_3rd.pdf
    ~/Documents/Reilly/learning_the_bash_shell_3rd.pdf
    ~/Documents/Reilly/learning_the_vi_and_vim_editors_7th.pdf
    ~/Documents/Reilly/learning_unix_for_osx_2nd.pdf
    ~/Documents/Reilly/lex_and_yacc.pdf
    ~/Documents/Reilly/linux_pocket_guide_3rd.pdf
    ~/Documents/Reilly/network_trouble_shooting_tools.pdf
    ~/Documents/Reilly/object_oriented_vs_functional_programming.pdf
    ~/Documents/Reilly/perl_cookbook_2nd.pdf
    ~/Documents/Reilly/php_cookbook.pdf
    ~/Documents/Reilly/python_cookbook.pdf
    ~/Documents/Reilly/rasberry_pi_cookbook.pdf
    ~/Documents/Reilly/r_cookbook.pdf
    ~/Documents/Reilly/regex_cookbook.pdf
    ~/Documents/Reilly/r_in_a_nutshell.pdf
    ~/Documents/Reilly/scale_cookbook.pdf
    ~/Documents/Reilly/sed_and_awk.pdf
    ~/Documents/Reilly/sql_cookbook.pdf
    ~/Documents/Reilly/tcp_ip_network_administration_3rd.pdf
    ~/Documents/Reilly/ten_steps_to_linux_survival.pdf
    ~/Documents/Reilly/unix_in_a_nutshell_4th.pdf
    ~/Documents/Reilly/unix_powershell_cookbook.pdf
    ~/Documents/Reilly/windows_powershell_cookbook.pdf
  # Video Games & DnD
	~/Documents/PDFs/HyperLightDrifter_ArtBook_Web.pdf
	~/Documents/PDFs/Jones-RapidGameDev.pdf
	~/Documents/PDFs/Strongholds and Followers.pdf
  # Assorted Programming Books
	~/Documents/PDFs/Rust_Essentials.pdf
	~/Documents/PDFs/The_AWK_Programming_Language.pdf


